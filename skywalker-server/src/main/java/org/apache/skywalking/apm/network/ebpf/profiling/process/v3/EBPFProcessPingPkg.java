// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ebpf/profiling/Process.proto

package org.apache.skywalking.apm.network.ebpf.profiling.process.v3;

/**
 * Protobuf type {@code skywalking.v3.EBPFProcessPingPkg}
 */
public final class EBPFProcessPingPkg extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:skywalking.v3.EBPFProcessPingPkg)
    EBPFProcessPingPkgOrBuilder {
private static final long serialVersionUID = 0L;
  // Use EBPFProcessPingPkg.newBuilder() to construct.
  private EBPFProcessPingPkg(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EBPFProcessPingPkg() {
    properties_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new EBPFProcessPingPkg();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private EBPFProcessPingPkg(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata.Builder subBuilder = null;
            if (entityMetadata_ != null) {
              subBuilder = entityMetadata_.toBuilder();
            }
            entityMetadata_ = input.readMessage(org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(entityMetadata_);
              entityMetadata_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              properties_ = new java.util.ArrayList<org.apache.skywalking.apm.network.common.v3.KeyStringValuePair>();
              mutable_bitField0_ |= 0x00000001;
            }
            properties_.add(
                input.readMessage(org.apache.skywalking.apm.network.common.v3.KeyStringValuePair.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        properties_ = java.util.Collections.unmodifiableList(properties_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.Process.internal_static_skywalking_v3_EBPFProcessPingPkg_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.Process.internal_static_skywalking_v3_EBPFProcessPingPkg_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg.class, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg.Builder.class);
  }

  public static final int ENTITYMETADATA_FIELD_NUMBER = 1;
  private org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata entityMetadata_;
  /**
   * <pre>
   * Process entity
   * </pre>
   *
   * <code>.skywalking.v3.EBPFProcessEntityMetadata entityMetadata = 1;</code>
   * @return Whether the entityMetadata field is set.
   */
  @java.lang.Override
  public boolean hasEntityMetadata() {
    return entityMetadata_ != null;
  }
  /**
   * <pre>
   * Process entity
   * </pre>
   *
   * <code>.skywalking.v3.EBPFProcessEntityMetadata entityMetadata = 1;</code>
   * @return The entityMetadata.
   */
  @java.lang.Override
  public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata getEntityMetadata() {
    return entityMetadata_ == null ? org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata.getDefaultInstance() : entityMetadata_;
  }
  /**
   * <pre>
   * Process entity
   * </pre>
   *
   * <code>.skywalking.v3.EBPFProcessEntityMetadata entityMetadata = 1;</code>
   */
  @java.lang.Override
  public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadataOrBuilder getEntityMetadataOrBuilder() {
    return getEntityMetadata();
  }

  public static final int PROPERTIES_FIELD_NUMBER = 2;
  private java.util.List<org.apache.skywalking.apm.network.common.v3.KeyStringValuePair> properties_;
  /**
   * <pre>
   * Minimize necessary properties
   * </pre>
   *
   * <code>repeated .skywalking.v3.KeyStringValuePair properties = 2;</code>
   */
  @java.lang.Override
  public java.util.List<org.apache.skywalking.apm.network.common.v3.KeyStringValuePair> getPropertiesList() {
    return properties_;
  }
  /**
   * <pre>
   * Minimize necessary properties
   * </pre>
   *
   * <code>repeated .skywalking.v3.KeyStringValuePair properties = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.apache.skywalking.apm.network.common.v3.KeyStringValuePairOrBuilder> 
      getPropertiesOrBuilderList() {
    return properties_;
  }
  /**
   * <pre>
   * Minimize necessary properties
   * </pre>
   *
   * <code>repeated .skywalking.v3.KeyStringValuePair properties = 2;</code>
   */
  @java.lang.Override
  public int getPropertiesCount() {
    return properties_.size();
  }
  /**
   * <pre>
   * Minimize necessary properties
   * </pre>
   *
   * <code>repeated .skywalking.v3.KeyStringValuePair properties = 2;</code>
   */
  @java.lang.Override
  public org.apache.skywalking.apm.network.common.v3.KeyStringValuePair getProperties(int index) {
    return properties_.get(index);
  }
  /**
   * <pre>
   * Minimize necessary properties
   * </pre>
   *
   * <code>repeated .skywalking.v3.KeyStringValuePair properties = 2;</code>
   */
  @java.lang.Override
  public org.apache.skywalking.apm.network.common.v3.KeyStringValuePairOrBuilder getPropertiesOrBuilder(
      int index) {
    return properties_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (entityMetadata_ != null) {
      output.writeMessage(1, getEntityMetadata());
    }
    for (int i = 0; i < properties_.size(); i++) {
      output.writeMessage(2, properties_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (entityMetadata_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getEntityMetadata());
    }
    for (int i = 0; i < properties_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, properties_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg)) {
      return super.equals(obj);
    }
    org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg other = (org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg) obj;

    if (hasEntityMetadata() != other.hasEntityMetadata()) return false;
    if (hasEntityMetadata()) {
      if (!getEntityMetadata()
          .equals(other.getEntityMetadata())) return false;
    }
    if (!getPropertiesList()
        .equals(other.getPropertiesList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasEntityMetadata()) {
      hash = (37 * hash) + ENTITYMETADATA_FIELD_NUMBER;
      hash = (53 * hash) + getEntityMetadata().hashCode();
    }
    if (getPropertiesCount() > 0) {
      hash = (37 * hash) + PROPERTIES_FIELD_NUMBER;
      hash = (53 * hash) + getPropertiesList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code skywalking.v3.EBPFProcessPingPkg}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:skywalking.v3.EBPFProcessPingPkg)
      org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkgOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.Process.internal_static_skywalking_v3_EBPFProcessPingPkg_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.Process.internal_static_skywalking_v3_EBPFProcessPingPkg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg.class, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg.Builder.class);
    }

    // Construct using org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getPropertiesFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (entityMetadataBuilder_ == null) {
        entityMetadata_ = null;
      } else {
        entityMetadata_ = null;
        entityMetadataBuilder_ = null;
      }
      if (propertiesBuilder_ == null) {
        properties_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        propertiesBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.Process.internal_static_skywalking_v3_EBPFProcessPingPkg_descriptor;
    }

    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg getDefaultInstanceForType() {
      return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg.getDefaultInstance();
    }

    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg build() {
      org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg buildPartial() {
      org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg result = new org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg(this);
      int from_bitField0_ = bitField0_;
      if (entityMetadataBuilder_ == null) {
        result.entityMetadata_ = entityMetadata_;
      } else {
        result.entityMetadata_ = entityMetadataBuilder_.build();
      }
      if (propertiesBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          properties_ = java.util.Collections.unmodifiableList(properties_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.properties_ = properties_;
      } else {
        result.properties_ = propertiesBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg) {
        return mergeFrom((org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg other) {
      if (other == org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg.getDefaultInstance()) return this;
      if (other.hasEntityMetadata()) {
        mergeEntityMetadata(other.getEntityMetadata());
      }
      if (propertiesBuilder_ == null) {
        if (!other.properties_.isEmpty()) {
          if (properties_.isEmpty()) {
            properties_ = other.properties_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePropertiesIsMutable();
            properties_.addAll(other.properties_);
          }
          onChanged();
        }
      } else {
        if (!other.properties_.isEmpty()) {
          if (propertiesBuilder_.isEmpty()) {
            propertiesBuilder_.dispose();
            propertiesBuilder_ = null;
            properties_ = other.properties_;
            bitField0_ = (bitField0_ & ~0x00000001);
            propertiesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getPropertiesFieldBuilder() : null;
          } else {
            propertiesBuilder_.addAllMessages(other.properties_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata entityMetadata_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata.Builder, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadataOrBuilder> entityMetadataBuilder_;
    /**
     * <pre>
     * Process entity
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entityMetadata = 1;</code>
     * @return Whether the entityMetadata field is set.
     */
    public boolean hasEntityMetadata() {
      return entityMetadataBuilder_ != null || entityMetadata_ != null;
    }
    /**
     * <pre>
     * Process entity
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entityMetadata = 1;</code>
     * @return The entityMetadata.
     */
    public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata getEntityMetadata() {
      if (entityMetadataBuilder_ == null) {
        return entityMetadata_ == null ? org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata.getDefaultInstance() : entityMetadata_;
      } else {
        return entityMetadataBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Process entity
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entityMetadata = 1;</code>
     */
    public Builder setEntityMetadata(org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata value) {
      if (entityMetadataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        entityMetadata_ = value;
        onChanged();
      } else {
        entityMetadataBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Process entity
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entityMetadata = 1;</code>
     */
    public Builder setEntityMetadata(
        org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata.Builder builderForValue) {
      if (entityMetadataBuilder_ == null) {
        entityMetadata_ = builderForValue.build();
        onChanged();
      } else {
        entityMetadataBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Process entity
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entityMetadata = 1;</code>
     */
    public Builder mergeEntityMetadata(org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata value) {
      if (entityMetadataBuilder_ == null) {
        if (entityMetadata_ != null) {
          entityMetadata_ =
            org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata.newBuilder(entityMetadata_).mergeFrom(value).buildPartial();
        } else {
          entityMetadata_ = value;
        }
        onChanged();
      } else {
        entityMetadataBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Process entity
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entityMetadata = 1;</code>
     */
    public Builder clearEntityMetadata() {
      if (entityMetadataBuilder_ == null) {
        entityMetadata_ = null;
        onChanged();
      } else {
        entityMetadata_ = null;
        entityMetadataBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Process entity
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entityMetadata = 1;</code>
     */
    public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata.Builder getEntityMetadataBuilder() {
      
      onChanged();
      return getEntityMetadataFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Process entity
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entityMetadata = 1;</code>
     */
    public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadataOrBuilder getEntityMetadataOrBuilder() {
      if (entityMetadataBuilder_ != null) {
        return entityMetadataBuilder_.getMessageOrBuilder();
      } else {
        return entityMetadata_ == null ?
            org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata.getDefaultInstance() : entityMetadata_;
      }
    }
    /**
     * <pre>
     * Process entity
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entityMetadata = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata.Builder, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadataOrBuilder> 
        getEntityMetadataFieldBuilder() {
      if (entityMetadataBuilder_ == null) {
        entityMetadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata.Builder, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadataOrBuilder>(
                getEntityMetadata(),
                getParentForChildren(),
                isClean());
        entityMetadata_ = null;
      }
      return entityMetadataBuilder_;
    }

    private java.util.List<org.apache.skywalking.apm.network.common.v3.KeyStringValuePair> properties_ =
      java.util.Collections.emptyList();
    private void ensurePropertiesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        properties_ = new java.util.ArrayList<org.apache.skywalking.apm.network.common.v3.KeyStringValuePair>(properties_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.apache.skywalking.apm.network.common.v3.KeyStringValuePair, org.apache.skywalking.apm.network.common.v3.KeyStringValuePair.Builder, org.apache.skywalking.apm.network.common.v3.KeyStringValuePairOrBuilder> propertiesBuilder_;

    /**
     * <pre>
     * Minimize necessary properties
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 2;</code>
     */
    public java.util.List<org.apache.skywalking.apm.network.common.v3.KeyStringValuePair> getPropertiesList() {
      if (propertiesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(properties_);
      } else {
        return propertiesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Minimize necessary properties
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 2;</code>
     */
    public int getPropertiesCount() {
      if (propertiesBuilder_ == null) {
        return properties_.size();
      } else {
        return propertiesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Minimize necessary properties
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 2;</code>
     */
    public org.apache.skywalking.apm.network.common.v3.KeyStringValuePair getProperties(int index) {
      if (propertiesBuilder_ == null) {
        return properties_.get(index);
      } else {
        return propertiesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Minimize necessary properties
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 2;</code>
     */
    public Builder setProperties(
        int index, org.apache.skywalking.apm.network.common.v3.KeyStringValuePair value) {
      if (propertiesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePropertiesIsMutable();
        properties_.set(index, value);
        onChanged();
      } else {
        propertiesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Minimize necessary properties
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 2;</code>
     */
    public Builder setProperties(
        int index, org.apache.skywalking.apm.network.common.v3.KeyStringValuePair.Builder builderForValue) {
      if (propertiesBuilder_ == null) {
        ensurePropertiesIsMutable();
        properties_.set(index, builderForValue.build());
        onChanged();
      } else {
        propertiesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Minimize necessary properties
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 2;</code>
     */
    public Builder addProperties(org.apache.skywalking.apm.network.common.v3.KeyStringValuePair value) {
      if (propertiesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePropertiesIsMutable();
        properties_.add(value);
        onChanged();
      } else {
        propertiesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Minimize necessary properties
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 2;</code>
     */
    public Builder addProperties(
        int index, org.apache.skywalking.apm.network.common.v3.KeyStringValuePair value) {
      if (propertiesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePropertiesIsMutable();
        properties_.add(index, value);
        onChanged();
      } else {
        propertiesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Minimize necessary properties
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 2;</code>
     */
    public Builder addProperties(
        org.apache.skywalking.apm.network.common.v3.KeyStringValuePair.Builder builderForValue) {
      if (propertiesBuilder_ == null) {
        ensurePropertiesIsMutable();
        properties_.add(builderForValue.build());
        onChanged();
      } else {
        propertiesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Minimize necessary properties
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 2;</code>
     */
    public Builder addProperties(
        int index, org.apache.skywalking.apm.network.common.v3.KeyStringValuePair.Builder builderForValue) {
      if (propertiesBuilder_ == null) {
        ensurePropertiesIsMutable();
        properties_.add(index, builderForValue.build());
        onChanged();
      } else {
        propertiesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Minimize necessary properties
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 2;</code>
     */
    public Builder addAllProperties(
        java.lang.Iterable<? extends org.apache.skywalking.apm.network.common.v3.KeyStringValuePair> values) {
      if (propertiesBuilder_ == null) {
        ensurePropertiesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, properties_);
        onChanged();
      } else {
        propertiesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Minimize necessary properties
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 2;</code>
     */
    public Builder clearProperties() {
      if (propertiesBuilder_ == null) {
        properties_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        propertiesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Minimize necessary properties
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 2;</code>
     */
    public Builder removeProperties(int index) {
      if (propertiesBuilder_ == null) {
        ensurePropertiesIsMutable();
        properties_.remove(index);
        onChanged();
      } else {
        propertiesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Minimize necessary properties
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 2;</code>
     */
    public org.apache.skywalking.apm.network.common.v3.KeyStringValuePair.Builder getPropertiesBuilder(
        int index) {
      return getPropertiesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Minimize necessary properties
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 2;</code>
     */
    public org.apache.skywalking.apm.network.common.v3.KeyStringValuePairOrBuilder getPropertiesOrBuilder(
        int index) {
      if (propertiesBuilder_ == null) {
        return properties_.get(index);  } else {
        return propertiesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Minimize necessary properties
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 2;</code>
     */
    public java.util.List<? extends org.apache.skywalking.apm.network.common.v3.KeyStringValuePairOrBuilder> 
         getPropertiesOrBuilderList() {
      if (propertiesBuilder_ != null) {
        return propertiesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(properties_);
      }
    }
    /**
     * <pre>
     * Minimize necessary properties
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 2;</code>
     */
    public org.apache.skywalking.apm.network.common.v3.KeyStringValuePair.Builder addPropertiesBuilder() {
      return getPropertiesFieldBuilder().addBuilder(
          org.apache.skywalking.apm.network.common.v3.KeyStringValuePair.getDefaultInstance());
    }
    /**
     * <pre>
     * Minimize necessary properties
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 2;</code>
     */
    public org.apache.skywalking.apm.network.common.v3.KeyStringValuePair.Builder addPropertiesBuilder(
        int index) {
      return getPropertiesFieldBuilder().addBuilder(
          index, org.apache.skywalking.apm.network.common.v3.KeyStringValuePair.getDefaultInstance());
    }
    /**
     * <pre>
     * Minimize necessary properties
     * </pre>
     *
     * <code>repeated .skywalking.v3.KeyStringValuePair properties = 2;</code>
     */
    public java.util.List<org.apache.skywalking.apm.network.common.v3.KeyStringValuePair.Builder> 
         getPropertiesBuilderList() {
      return getPropertiesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.apache.skywalking.apm.network.common.v3.KeyStringValuePair, org.apache.skywalking.apm.network.common.v3.KeyStringValuePair.Builder, org.apache.skywalking.apm.network.common.v3.KeyStringValuePairOrBuilder> 
        getPropertiesFieldBuilder() {
      if (propertiesBuilder_ == null) {
        propertiesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.apache.skywalking.apm.network.common.v3.KeyStringValuePair, org.apache.skywalking.apm.network.common.v3.KeyStringValuePair.Builder, org.apache.skywalking.apm.network.common.v3.KeyStringValuePairOrBuilder>(
                properties_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        properties_ = null;
      }
      return propertiesBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:skywalking.v3.EBPFProcessPingPkg)
  }

  // @@protoc_insertion_point(class_scope:skywalking.v3.EBPFProcessPingPkg)
  private static final org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg();
  }

  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<EBPFProcessPingPkg>
      PARSER = new com.google.protobuf.AbstractParser<EBPFProcessPingPkg>() {
    @java.lang.Override
    public EBPFProcessPingPkg parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new EBPFProcessPingPkg(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<EBPFProcessPingPkg> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<EBPFProcessPingPkg> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

